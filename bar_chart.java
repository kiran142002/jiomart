/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jeo_mart_billing_system;

import javax.swing.*;
import java.sql.*;
import db.JDBC;
import java.sql.ResultSet;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author kiran
 */
public class bar_chart extends javax.swing.JFrame {
    

    /**
     * Creates new form bar_chart
     */
    public bar_chart() {
        initComponents();
    }
     public static String decrypt (String encryptedData,String secretKey) throws Exception{
        Cipher cipher=Cipher.getInstance("AES");
        SecretKeySpec secretKeySpec=new SecretKeySpec(secretKey.getBytes(),"AES");
        cipher.init(Cipher.DECRYPT_MODE,secretKeySpec );
        byte[] decodedBytes=Base64.getDecoder().decode(encryptedData);
        byte[] decryptedBytes=cipher.doFinal(decodedBytes);
        return new String(decryptedBytes);
        
    }
    private final String SECRET_KEY="1234567890123456";
    
    
    public ResultSet getDataFromDatabase(){
        ResultSet resultSet = null;
          try(Connection con=JDBC.con();
             
               PreparedStatement ps= con.prepareStatement("select pname,prate from pdtbl");){
         
            resultSet=ps.executeQuery();
        
          }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
         }
       
return resultSet;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bar_chart = new javax.swing.JButton();
        close = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BAR CHART GENERATOR");
        setMaximumSize(new java.awt.Dimension(600, 500));
        setMinimumSize(new java.awt.Dimension(600, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bar_chart.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        bar_chart.setText("BAR CHART");
        bar_chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bar_chartActionPerformed(evt);
            }
        });
        getContentPane().add(bar_chart, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 440, -1, -1));

        close.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        close.setText("CLOSE");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 440, 83, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void bar_chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bar_chartActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset=new DefaultCategoryDataset();
        
        try{
            ResultSet resultSet= getDataFromDatabase();
            
            JFreeChart barChart=ChartFactory.createBarChart(
                        "product vs rate",
                         "product",
                         "rate",
                         dataset
            
            
            );
            
            ChartPanel chartPanel=new ChartPanel(barChart);
            chartPanel.setPreferredSize(new java.awt.Dimension(200, 200));
            setContentPane(chartPanel);
            
                while(resultSet.next()){
                    String pname1=resultSet.getString("pname");
                    double prate1=Double.parseDouble(decrypt(resultSet.getString("prate"),SECRET_KEY));
                    dataset.addValue(prate1, "Values", pname1);
                }
            
                    JOptionPane.showMessageDialog(this," BAR CHART GENERATOR!");
            
            
          } catch (Exception e) {
                 JOptionPane.showMessageDialog(this,e);

           }
        
    }//GEN-LAST:event_bar_chartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bar_chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bar_chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bar_chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bar_chart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bar_chart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bar_chart;
    private javax.swing.JButton close;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
