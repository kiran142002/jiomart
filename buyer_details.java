/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jeo_mart_billing_system;
import db.JDBC;
import javax.swing.*;
import java.sql.*;
import java.awt.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;






/**
 *
 * @author kiran
 */

public class buyer_details extends javax.swing.JFrame {

    /**
     * Creates new form buyer_details
     */
        private DefaultTableModel m;
        private final JTable Table1;
        
        private class ImageRenderer extends JLabel implements TableCellRenderer{
            @Override
            public Component getTableCellRendererComponent (JTable table,Object value,boolean isSelected ,
                    boolean hasFocus,int row,int column){
                if(value instanceof ImageIcon){
                    setIcon((ImageIcon) value);
                }else{
                    setText("No Image");
                }
                return this;
                    
                
            
            }
        }
        
        
    public buyer_details() {
        initComponents();
        
        String[] columnNames={"NAME","IMAGE","NUMBER","EMAIL","GENDER"};
        m= new DefaultTableModel(columnNames,0);
        Table1=new JTable(m){
             @Override
            public TableCellRenderer getCellRenderer(int row,int column){
            if(column==1){
                return (TableCellRenderer) new ImageRenderer();

                }   
                return super.getCellRenderer(row,column);

        }
        };
                this.setLayout(new BorderLayout());
                this.setSize(400,300);
                this.add(new JScrollPane(Table1), BorderLayout.CENTER);
                Table1.setRowHeight(80);
                this.setVisible(true);
                this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                
                
                
                
            
          
           

                

 

   

        
        
}
                
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        details = new javax.swing.JButton();
        csv_file = new javax.swing.JButton();
        close = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BUYER DETAILS");
        setMaximumSize(new java.awt.Dimension(600, 550));
        setMinimumSize(new java.awt.Dimension(600, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        details.setText("DETAILS");
        details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsActionPerformed(evt);
            }
        });
        getContentPane().add(details, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        csv_file.setText("CSV FILE");
        csv_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csv_fileActionPerformed(evt);
            }
        });
        getContentPane().add(csv_file, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 450, 104, -1));

        close.setText("CLOSE");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 450, 83, -1));

        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        getContentPane().add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 450, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        // TODO add your handling code here:
            this.setVisible(false);
    }//GEN-LAST:event_closeActionPerformed

    private void detailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsActionPerformed
        // TODO add your handling code here:
        
           try(Connection con=JDBC.con();
            PreparedStatement ps= con.prepareStatement("sp_buyer_get");){
          
            
          
           
            ResultSet rs=ps.executeQuery();
            
            while(rs.next())
            {
              String name=rs.getString("name");
              String number=rs.getString("number");
              String gender=rs.getString("gender");
              String email=rs.getString("email");
              byte[] imageBytes =rs.getBytes("img");
              
              ImageIcon  imageIcon =null;
              if(imageBytes!=null){
                  InputStream in= new ByteArrayInputStream(imageBytes);
                  BufferedImage bufferedImage =ImageIO.read(in);
                  imageIcon =new ImageIcon( bufferedImage );
              }
              m.addRow(new Object[] {name,imageIcon,number,gender,email});
              
              
              
              
            }
            
//            else{JOptionPane.showMessageDialog(this, "enter correct SECURITY ANSWER");}
            
            
            
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);

        }
        
    }//GEN-LAST:event_detailsActionPerformed

    private void csv_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csv_fileActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser=new JFileChooser();
         int userSelection=fileChooser.showOpenDialog(this);
         
           if (userSelection ==JFileChooser.APPROVE_OPTION){
                 File fileToSave=fileChooser.getSelectedFile();
               
                 String filePath =fileToSave.getAbsolutePath();
                 if(!filePath.endsWith(".csv")){
                     filePath +=".csv";
                 }
                     
                 
                 try(BufferedWriter writer =new BufferedWriter(new FileWriter(filePath))){
                     
                     for(int i=0;i<Table1.getColumnCount();i++){
                         writer.write(Table1.getColumnName(i));
                         if(i<Table1.getColumnCount() -1){
                               writer.write(",");
                         }
                         
                     }
                        writer.newLine();
                        
                        
                          for(int row=0;row<Table1.getRowCount();row++){
                               for(int col=0;col<Table1.getColumnCount();col++){
                                     writer.write(Table1.getValueAt(row, col).toString());
                                         if(col<Table1.getColumnCount() -1){
                               writer.write(",");
                         }
                         
                     }
                        writer.newLine();
                              
                          }
                          JOptionPane.showMessageDialog(this, "Data exported to csv  successfully");
                      
                 }
                 catch(Exception e){
                       JOptionPane.showMessageDialog(this,e);
                 }
                     
              
                 }
           
              
        
        
    }//GEN-LAST:event_csv_fileActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        try{
            Table1.print(JTable.PrintMode.NORMAL);
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,e);
                 
        }
            
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buyer_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buyer_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buyer_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buyer_details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buyer_details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close;
    private javax.swing.JButton csv_file;
    private javax.swing.JButton details;
    private javax.swing.JButton print;
    // End of variables declaration//GEN-END:variables
}
